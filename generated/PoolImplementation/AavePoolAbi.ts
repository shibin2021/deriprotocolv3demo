// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AavePoolAbi extends ethereum.SmartContract {
  static bind(address: Address): AavePoolAbi {
    return new AavePoolAbi("AavePoolAbi", address);
  }

  getReservesList(): Array<Address> {
    let result = super.call(
      "getReservesList",
      "getReservesList():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getReservesList(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getReservesList",
      "getReservesList():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getConfiguration(asset: Address): BigInt {
    let result = super.call(
      "getConfiguration",
      "getConfiguration(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );

    return result[0].toBigInt();
  }

  try_getConfiguration(asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getConfiguration",
      "getConfiguration(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}
